{"version":3,"sources":["components/FieldArray.js","RsvpForm.js","api/getMatchingEvent.js","ValidateEventCodeForm.js","api/createRSVP.js","index.js"],"names":["Panel","Collapse","FieldArray","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","id","add","_this$props","props","getFieldValue","setFieldsValue","name","keys","newRowKey","nextKeys","defineProperty","openPanels","toString","remove","keyToRemove","_this$props2","_getFieldValue2","filter","key","panelKey","defaultValidation","validateTrigger","rules","required","whitespace","message","handlePanelChange","_this$props3","getFieldArrayRows","_this$props4","getFieldDecorator","fields","initialValue","_getFieldValue4","rows","reduce","preResult","rowKey","row","map","obj","i","react_default","a","createElement","es_form","Item","validation","field","react","icon","className","type","onClick","panelName","RowWithPanel","header","toConsumableArray","collapse","onChange","activeKey","inherits","createClass","value","es_button","style","width","Component","RsvpForm","Form","create","form","eventData","onSubmit","e","validateFields","submitHandler","preventDefault","err","values","validateAndSubmit","divider","orientation","FieldArray_FieldArray","assign","dataForThisRow","firstName","lastName","input","placeholder","TextArea","help_needed","roleName","es_select","availableRole","Option","role_type","renderRolesSubform","htmlType","getMatchingEvent","eventCode","getMatchingEventQuery","gql","_templateObject","ApolloClient","uri","headers","X-RSVP_EVENT_CODE","query","_callee2","setErrorMessage","setEventData","setIsLoading","regenerator_default","wrap","_context2","prev","next","_ref","asyncToGenerator","mark","_callee","matchingEventData","_context","sent","data","events","t0","stop","_x6","_x7","ValidateEventCodeForm","_useState","useState","_useState2","slicedToArray","errorMessage","_useState3","_useState4","isLoading","handleCheckEventCode","es_alert","description","spin","tip","disabled","createRSVP","mainGuest","additionalGuests","roles","client","mutationQuery","createRSVP_templateObject","email","dietaryRequirements","phone","guest","replace","getAdditionalGuestMutationFragment","role","details","getRoleMutationFragment","generateRSVPMutation","mutate","mutation","rootEl","document","getElementById","setLoading","setSubmitted","guests","slice","getComponentToDisplay","isSubmitted","handleSubmit","ReactDOM","render","setEventCode","_useState5","_useState6","padding"],"mappings":"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","file":"static/js/main.beef83bb.chunk.js","sourcesContent":["// from https://codesandbox.io/s/jnpjpj2p55\n\nimport React, { Component, Fragment } from \"react\";\nimport { Form, Icon, Button, Collapse } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nconst { Panel } = Collapse;\n\nexport class FieldArray extends Component {\n  id = 1;\n\n  add = () => {\n    const { getFieldValue, setFieldsValue, name } = this.props;\n    const { keys } = getFieldValue(`${name}List`);\n    const newRowKey = this.id++;\n    const nextKeys = keys.concat(newRowKey);\n\n    setFieldsValue({\n      [`${name}List`]: {\n        keys: nextKeys,\n        openPanels: [newRowKey.toString()]\n      }\n    });\n  };\n\n  remove = keyToRemove => () => {\n    const { getFieldValue, setFieldsValue, name } = this.props;\n    const { keys, openPanels } = getFieldValue(`${name}List`);\n\n    if (keys.length === 1) return;\n    setFieldsValue({\n      [`${name}List`]: {\n        keys: keys.filter(key => key !== keyToRemove),\n        openPanels: openPanels.filter(panelKey => panelKey !== keyToRemove)\n      }\n    });\n  };\n\n  defaultValidation = name => ({\n    validateTrigger: [\"onChange\", \"onBlur\"],\n    rules: [\n      {\n        required: true,\n        whitespace: true,\n        message: `Please fill this out.`\n      }\n    ]\n  });\n\n  handlePanelChange = openPanels => {\n    const { getFieldValue, setFieldsValue, name } = this.props;\n    const { keys } = getFieldValue(`${name}List`);\n\n    setFieldsValue({\n      [`${name}List`]: {\n        keys,\n        openPanels\n      }\n    });\n  };\n\n  getFieldArrayRows = () => {\n    const { getFieldDecorator, getFieldValue, fields, name } = this.props;\n    getFieldDecorator(`${name}List`, {\n      initialValue: {\n        keys: [0],\n        openPanels: [\"0\"]\n      }\n    });\n    const { keys, openPanels } = getFieldValue(`${name}List`);\n\n    const rows = keys.reduce((preResult, rowKey) => {\n      const row = fields.map((obj, i) => (\n        <Form.Item key={`${rowKey}${obj.name}`}>\n          {getFieldDecorator(\n            `${name}[${rowKey}][${obj.name}]`,\n            obj.validation || this.defaultValidation(name)\n          )(obj.field())}\n          {keys.length > 1 && fields.length - 1 === i ? (\n            <Fragment>\n              <Icon\n                className=\"dynamic-delete-button\"\n                type=\"minus-circle-o\"\n                onClick={this.remove(rowKey)}\n              />\n              {` Remove`}\n            </Fragment>\n          ) : null}\n        </Form.Item>\n      ));\n      const panelName = this.props.panelName(getFieldValue(name)[rowKey]);\n\n      const RowWithPanel = (\n        <Panel header={panelName} key={rowKey}>\n          {row}\n        </Panel>\n      );\n\n      return [...preResult, RowWithPanel];\n    }, []);\n\n    return (\n      <Collapse onChange={this.handlePanelChange} activeKey={openPanels}>\n        {rows}\n      </Collapse>\n    );\n  };\n\n  render() {\n    const { name } = this.props;\n    return (\n      <Fragment>\n        {this.getFieldArrayRows()}\n        <Form.Item>\n          <Button type=\"dashed\" onClick={this.add} style={{ width: \"60%\" }}>\n            <Icon type=\"plus\" /> Add &nbsp; {name}\n          </Button>\n        </Form.Item>\n      </Fragment>\n    );\n  }\n}\n\nFieldArray.propTypes = {\n  name: PropTypes.string.isRequired,\n  fields: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.arrayOf(PropTypes.object)\n    //TODO: add object shape validation.\n  ]).isRequired,\n  getFieldValue: PropTypes.func.isRequired,\n  setFieldsValue: PropTypes.func.isRequired\n};\n","import React, { Fragment } from \"react\";\nimport { Button, Divider, Form, Input, Select } from \"antd\";\n\nimport { FieldArray } from \"./components/FieldArray\";\n\nconst validateAndSubmit = (e, validateFields, submitHandler) => {\n  e.preventDefault();\n  validateFields((err, values) => {\n    if (!err) {\n      submitHandler(values);\n    }\n  });\n};\n\nconst renderRolesSubform = (form, eventData) => {\n  if (eventData.help_needed.length === 0) {\n    return null;\n  }\n  return (\n    <Fragment>\n      <Divider orientation=\"left\" className=\"first\">\n        We'd love your help to make the ceremony awesome. How can you help?\n      </Divider>\n      <FieldArray\n        {...form}\n        name=\"roles\"\n        panelName={dataForThisRow => {\n          return `${dataForThisRow.roleName || \"\"}`;\n        }}\n        fields={[\n          {\n            name: \"roleName\",\n            field: () => (\n              <Select placeholder=\"Role\">\n                {eventData.help_needed.map(availableRole => (\n                  <Select.Option\n                    key={availableRole.role_type}\n                    value={availableRole.role_type}\n                  >\n                    {availableRole.role_type}\n                  </Select.Option>\n                ))}\n              </Select>\n            )\n          },\n          {\n            name: \"details\",\n            field: () => <Input.TextArea rows={4} placeholder={\"Details\"} />\n          }\n        ]}\n      />\n    </Fragment>\n  );\n};\n\nconst UnwrappedRSVPForm = props => {\n  const { form, eventData } = props;\n\n  return (\n    <Form\n      onSubmit={e =>\n        validateAndSubmit(e, props.form.validateFields, props.onSubmit)\n      }\n    >\n      {/* TODO show event details */}\n      <Divider orientation=\"left\" className=\"first\">\n        Who's coming along?\n      </Divider>\n      <FieldArray\n        {...form}\n        name=\"guests\"\n        panelName={dataForThisRow => {\n          return `${dataForThisRow.firstName || \"\"} ${dataForThisRow.lastName ||\n            \"\"}`;\n        }}\n        fields={[\n          {\n            name: \"firstName\",\n            field: () => <Input placeholder={\"First Name\"} />\n          },\n          {\n            name: \"lastName\",\n            field: () => <Input placeholder={\"Last Name\"} />\n          },\n          {\n            name: \"email\",\n            field: () => <Input placeholder={\"Email\"} />\n          },\n          {\n            name: \"phone\",\n            field: () => <Input placeholder={\"Phone\"} />\n          },\n          {\n            name: \"dietaryRequirements\",\n            field: () => (\n              <Input.TextArea rows={4} placeholder={\"Dietary Requirements\"} />\n            )\n          }\n        ]}\n      />\n      {renderRolesSubform(form, eventData)}\n      <Button type=\"primary\" htmlType=\"submit\">\n        RSVP\n      </Button>\n    </Form>\n  );\n};\n\nexport const RsvpForm = Form.create({ name: \"rsvp_form\" })(UnwrappedRSVPForm);\n","import ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\n\nexport function getMatchingEvent(eventCode) {\n  const getMatchingEventQuery = gql`\n    {\n      events(where: {event_code: {_eq: \"${eventCode}\"}}) {\n        event_id\n        event_name\n        event_code\n        help_needed(where: {vacancies_remaining: {_gt: 0}}) {\n          role_type\n        }\n      }\n    }\n  `;\n\n  const client = new ApolloClient({\n    uri: \"https://sandy-jem-wedding-site.herokuapp.com/v1alpha1/graphql\",\n    headers: {\n      \"X-RSVP_EVENT_CODE\": eventCode\n    }\n  });\n\n  return client.query({\n    query: getMatchingEventQuery\n  });\n}\n","import React, { useState } from \"react\";\n\nimport { Alert, Button, Form, Input, Spin } from \"antd\";\nimport { getMatchingEvent } from \"./api/getMatchingEvent\";\n\nasync function handleCheckEventCode(\n  e,\n  validateFields,\n  setErrorMessage,\n  setEventData,\n  setIsLoading\n) {\n  e.preventDefault(true);\n  validateFields(async (err, values) => {\n    if (!err) {\n      setIsLoading(true);\n      try {\n        const matchingEventData = await getMatchingEvent(values.eventCode);\n\n        setIsLoading(false);\n        if (matchingEventData.data.events.length) {\n          setEventData(matchingEventData.data.events[0]);\n        } else {\n          setErrorMessage(\"Invalid event code\");\n        }\n      } catch (e) {\n        setIsLoading(false);\n        setErrorMessage(\"Invalid event code\");\n      }\n    }\n  });\n}\n\nfunction UnwrappedValidateEventCodeForm(props) {\n  const [errorMessage, setErrorMessage] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const { getFieldDecorator } = props.form;\n  const { setEventData } = props;\n\n  return (\n    <Form\n      onSubmit={e =>\n        handleCheckEventCode(\n          e,\n          props.form.validateFields,\n          setErrorMessage,\n          setEventData,\n          setIsLoading\n        )\n      }\n    >\n      <h3>Enter your RSVP code</h3>\n      {errorMessage && (\n        <Alert\n          message=\"Invalid RSVP code\"\n          description=\"Please double check the RSVP code you entered. If you have issues, contact Sandy/Jeremy\"\n          type=\"error\"\n        />\n      )}\n      {isLoading && <Spin tip=\"Loading...\" />}\n      <Form.Item>\n        {getFieldDecorator(\"eventCode\", {\n          rules: [\n            {\n              required: true,\n              message: \"Please enter the event code you got from us\"\n            }\n          ]\n        })(<Input disabled={isLoading} placeholder=\"Event Code\" />)}\n      </Form.Item>\n      <Button disabled={isLoading} type=\"primary\" htmlType=\"submit\">\n        Check Code\n      </Button>\n    </Form>\n  );\n}\n\nexport const ValidateEventCodeForm = Form.create({ name: \"event_code_form\" })(\n  UnwrappedValidateEventCodeForm\n);\n","import ApolloClient from \"apollo-boost\";\nimport { gql } from \"apollo-boost\";\n\nfunction getRoleMutationFragment(roles) {\n  return `[\n    ${roles.map(\n      role =>\n        `\n        {\n          role_name: \"${role.roleName}\",\n          details: \"${role.details}\"\n        }`\n    )}\n  ]`.replace(/[\\s]{2,}/g, \" \");\n}\n\nfunction getAdditionalGuestMutationFragment(eventCode, additionalGuests) {\n  return `[\n    ${additionalGuests.map(\n      guest => `\n      {\n        dietary_requirements: \"${guest.dietaryRequirements}\",\n        email: \"${guest.email}\",\n        guest_name: \"${guest.firstName} ${guest.lastName}\",\n        phone: \"${guest.phone}\",\n        related_event: \"${eventCode}\"\n      }`\n    )}\n  ]`.replace(/[\\s]{2,}/g, \" \");\n}\n\nfunction generateRSVPMutation(eventCode, mainGuest, additionalGuests, roles) {\n  debugger;\n\n  return gql`\n    mutation insert_rsvps {\n      insert_rsvps(\n        objects: [\n          {\n            email: \"${mainGuest.email}\",\n            dietary_requirements: \"${mainGuest.dietaryRequirements}\",\n            related_event: \"${eventCode}\",\n            guest_name: \"${mainGuest.firstName} ${mainGuest.lastName}\",\n            phone: \"${mainGuest.phone}\",\n            additional_guests: {\n              data: ${getAdditionalGuestMutationFragment(\n                eventCode,\n                additionalGuests\n              )}\n            },\n            roles: {\n              data: ${getRoleMutationFragment(roles)}\n            }\n          }\n        ]\n      ) {\n        affected_rows\n        returning {\n          email\n          guest_id\n          guest_name\n          phone\n          additional_guests {\n            guest_name\n            email\n            phone\n            guest_id\n            main_guest\n          }\n          roles {\n            role_name\n            details\n            role_id\n          }\n        }\n      }\n    }\n  `;\n}\n\nexport function createRSVP(eventCode, mainGuest, additionalGuests, roles) {\n  const client = new ApolloClient({\n    uri: \"https://sandy-jem-wedding-site.herokuapp.com/v1alpha1/graphql\",\n    headers: {\n      \"X-RSVP_EVENT_CODE\": eventCode,\n    }\n  });\n\n  const mutationQuery = generateRSVPMutation(\n    eventCode,\n    mainGuest,\n    additionalGuests,\n    roles\n  );\n  debugger;\n  return client.mutate({\n    mutation: mutationQuery\n  });\n}\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RsvpForm } from \"./RsvpForm\";\nimport { ValidateEventCodeForm } from \"./ValidateEventCodeForm\";\nimport { createRSVP } from \"./api/createRSVP\";\nimport { Spin } from \"antd\";\n\nimport \"antd/dist/antd.css\";\n\nconst rootEl = document.getElementById(\"root\");\n\nasync function handleSubmit(values, eventData, setLoading, setSubmitted) {\n  const mainGuest = values.guests[0];\n  const additionalGuests = values.guests.slice(1);\n  const roles = values.roles;\n\n  setLoading(true);\n  try {\n    const createRsvpResult = await createRSVP(\n      eventData,\n      mainGuest,\n      additionalGuests,\n      roles\n    );\n    setLoading(false);\n    setSubmitted(true);\n  } catch (e) {\n    debugger;\n    setLoading(false);\n  }\n}\n\nfunction getComponentToDisplay(\n  eventData,\n  setEventData,\n  isLoading,\n  setLoading,\n  isSubmitted,\n  setSubmitted\n) {\n  if (isSubmitted) {\n    return <span>Thanks! See you at the ceremony.</span>;\n  }\n\n  if (isLoading) {\n    return <Spin tip=\"Loading...\" />;\n  }\n\n  if (!eventData) {\n    return <ValidateEventCodeForm setEventData={setEventData} />;\n  }\n\n  return (\n    <RsvpForm\n      onSubmit={values =>\n        handleSubmit(values, eventData, setLoading, setSubmitted)\n      }\n      eventData={eventData}\n    />\n  );\n}\n\nfunction App() {\n  const [eventData, setEventCode] = useState();\n  const [isLoading, setLoading] = useState(false);\n  const [isSubmitted, setSubmitted] = useState(false);\n  return (\n    <div style={{ padding: 15 }}>\n      <h2>RSVP</h2>\n      {getComponentToDisplay(\n        eventData,\n        setEventCode,\n        isLoading,\n        setLoading,\n        isSubmitted,\n        setSubmitted\n      )}\n    </div>\n  );\n}\n\nReactDOM.render(<App />, rootEl);\n"],"sourceRoot":""}